<section class="filler container-fluid ">
    <div class="row ">
        <div class="col-md-6 mt-5 d-flex align-self-stretch">

            <!-- Setting up chart-->
            <div class="chartContainer w-100">
                <div class="row" role="tablist">
                </div>
                <i class=" col text-right fas fa-plus mt-1 pt-1 pb-1" data-toggle="modal" data-target="#AddBSStats"></i>
                <!-- Setting up add modal -->
                <canvas id="bloodSugarChart"> </canvas>
            </div>
        </div>

        <!-- Setting up breakdown -->
        <div class="breakdown col-md-6 mt-5 d-flex align-self-stretch">
            <div class="breakdownContainer pt-2 pl-2 pb-2">
                <h class="DB font-weight-bold "> Daily Breakdown: </h>
                <p class="DB font-weight-bold"> <span class="dateVal"> --/--/-- </span> </p>
                <p> <i class="fas fa-coffee pr-2"></i>Breakfast Reading - <span class="breakfastVal">--</span> mmol/L
                </p>
                <p> <i class="fas fa-hamburger pr-2"></i>Lunch Reading - <span class="lunchVal">--</span> mmol/L </p>
                <p> <i class="fas fa-pizza-slice pr-2"></i>Dinner Reading - <span class="dinnerVal">--</span> mmol/L
                </p>
                <p> <i class="fas fa-moon pr-2"></i>Evening Reading - <span class="eveningVal">--</span> mmol/L </p>
                <p> <span class="notesVal">--</span> </p>
                <div class="row symbols pt-5">
                    <i class="col text-left fas fa-chevron-left pb-1 d-inline-block" id="cycleBreakDownLeft"></i>
                    <i class="col text-right fas fa-chevron-right pb-1 d-inline-block mr-2" id=cycleBreakDownRight></i>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Table  -->
<section class="ta container-fluid text-center mt-3 pt-2 ">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">LOWEST</th>
                <th scope="col">HIGHEST</th>
                <th scope="col">AVERAGE</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td id="lowest">&nbsp;</td>
                <td id="highest">&nbsp;</td>
                <td id="average">&nbsp;</td>
            </tr>
        </tbody>
    </table>
</section>


<!-- Add Modal -->
<<<<<<< HEAD
<div class="modal fade" id="AddBPStats" tabindex="-1" role="dialog" aria-labelledby="Addlabel" aria-hidden="true">
=======
<div class="modal fade" id="AddBSStats" tabindex="-1" role="dialog" aria-labelledby="Addlabel" aria-hidden="true">
>>>>>>> d3d6b1bfc43e107ad6f7daec642ba4d4f7ea7f28
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class=" col-12 modal-title text-center" id="Addlabel">Daily Log
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h5>
            </div>
            <div class="modal-body">
                <div class="modal-body">
<<<<<<< HEAD
                    <form action='/AddBPStats' method='POST'>
=======
                    <form action='/AddBSStats' method='POST'>
>>>>>>> d3d6b1bfc43e107ad6f7daec642ba4d4f7ea7f28

                        <div class="form-group ">
                            <input id="date" class="test form-control" name="date" type="text" placeholder="MM/DD/YYY"
                                required />
                        </div>
                        <div class="form-group ">
                            <input id="breakfast" class="test form-control" name="breakfast" type="number" step="any"
                                placeholder="Breakfast Figures" required />
                        </div>
                        <div class="form-group ">
                            <input id="lunch" class="test form-control" name="lunch" type="number"
                                placeholder="Lunch Figures" step="any" required />
                        </div>
                        <div class="form-group ">
                            <input id="dinner" class="test form-control" name="dinner" type="number"
                                placeholder="Dinner Figures" step="any" required />
                        </div>
                        <div class="form-group ">
                            <input id="night" class="test form-control" name="night" type="number"
                                placeholder="Night Figures" step="any" required />
                        </div>
                        <div class="form-group ">
                            <input id="notes" class="test form-control" name="notes" type="text" placeholder="Notes"
                                required />
                        </div>
                        <div class="modalbutton mb-3 text-center">
                            <button type="submit" class="Addbutton btn btn-default col-5 " name="action">Add</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    window.addEventListener('DOMContentLoaded', (event) => {
        //Variables for Charts
        var date = document.querySelector('.dateVal');
        var breakfast = document.querySelector('.breakfastVal');
        var lunch = document.querySelector('.lunchVal');
        var dinner = document.querySelector('.dinnerVal');
        var evening = document.querySelector('.eveningVal');
        var notes = document.querySelector('.notesVal');
        var lowest = document.querySelector('#lowest');
        var highest = document.querySelector('#highest');
        var average = document.querySelector('#average');

        var leftCycle = document.querySelector('#cycleBreakDownLeft');
        var rightCycle = document.querySelector('#cycleBreakDownRight');

<<<<<<< HEAD
        fetch('/BPStats/<%= userID %>')
=======
        fetch('/BSStats/<%= userID %>')
>>>>>>> d3d6b1bfc43e107ad6f7daec642ba4d4f7ea7f28
            .then(
                function (response) {
                    response.json().then(function (data) {
                        console.log(data);
                        var cycleCount = 0;
                        var breakfastVal = data[cycleCount].breakfast;
                        var lunchVal = data[cycleCount].lunch;
                        var dinnerVal = data[cycleCount].dinner;
                        var eveningVal = data[cycleCount].night;
                        var notesVal = data[cycleCount].notes;
                        var dateVal = data[cycleCount].date;

                        breakfast.innerHTML = breakfastVal;
                        lunch.innerHTML = lunchVal;
                        dinner.innerHTML = dinnerVal;
                        evening.innerHTML = eveningVal;
                        notes.innerHTML = notesVal;
                        date.innerHTML = dateVal;

                        leftCycle.addEventListener('click', () => {
                            if (cycleCount > 0) {
                                cycleCount--;
                                breakfastVal = data[cycleCount].breakfast;
                                lunchVal = data[cycleCount].lunch;
                                dinnerVal = data[cycleCount].dinner;
                                eveningVal = data[cycleCount].night;
                                notesVal = data[cycleCount].notes;
                                dateVal = data[cycleCount].date;

                                breakfast.innerHTML = breakfastVal;
                                lunch.innerHTML = lunchVal;
                                dinner.innerHTML = dinnerVal;
                                evening.innerHTML = eveningVal;
                                notes.innerHTML = notesVal;
                                date.innerHTML = dateVal;
                            } else {
                                return;
                            }
                        })


                        rightCycle.addEventListener('click', () => {
                            if (cycleCount => 0 && cycleCount < data.length()) {
                                cycleCount++;
                                breakfastVal = data[cycleCount].breakfast;
                                lunchVal = data[cycleCount].lunch;
                                dinnerVal = data[cycleCount].dinner;
                                eveningVal = data[cycleCount].night;
                                notesVal = data[cycleCount].notes;
                                dateVal = data[cycleCount].date;

                                breakfast.innerHTML = breakfastVal;
                                lunch.innerHTML = lunchVal;
                                dinner.innerHTML = dinnerVal;
                                evening.innerHTML = eveningVal;
                                notes.innerHTML = notesVal;
                                date.innerHTML = dateVal;
                            } else {
                                return;
                            }
                        })

                        var valueArray = [breakfastVal, lunchVal, dinnerVal, eveningVal];
                        var totalValueArray = valueArray.reduce((previous, current) => current += previous);
                        const minValue = Math.min(...valueArray);
                        lowest.innerHTML = minValue;
                        const maxValue = Math.max(...valueArray);
                        highest.innerHTML = maxValue;
                        average.innerHTML = totalValueArray / valueArray.length;
                        var chart_labels = [];
                        var sugar_dataset = [];
                        data.forEach(entry => {
                            chart_labels.push([entry.date]);
                            sugar_dataset.push([(
                                (entry.breakfast + entry.lunch + entry.dinner + entry.night) / 4
                            )]);
                        })
<<<<<<< HEAD
                        var diastolic_dataset = [120, 115, 112, 100, 113,];
                        var systolic_dataset = [85, 87, 90, 75, 77,];
=======
>>>>>>> d3d6b1bfc43e107ad6f7daec642ba4d4f7ea7f28
                        var pointBackgroundColors = [];
                        var bloodSugarCTX = document.getElementById('bloodSugarChart');

                        //Setting up BS current week chart
                        var bloodSugarConfig = {
                            type: 'line',
                            data: {
                                labels: chart_labels, //Setting labels for xAxes
                                datasets: [{
                                    pointBackgroundColor: pointBackgroundColors, //Changing the colour of the graph points
                                    pointBorderColor: false,
                                    label: 'Blood Sugar',
                                    lineTension: 0,
                                    fill: false,
                                    borderColor: 'rgb(110, 143, 197)', //Setting border colour for graph
                                    data: sugar_dataset,
                                }]
                            },
                            options: {
                                legend: {
                                    display: false
                                },
                                scales: {
                                    yAxes: [{
                                        gridLines: {
                                            display: false,
                                            color: 'rgb(110, 143, 197)'
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Blood Sugar (mmol/l)' //Adding label for yAxes
                                        },
                                    }],
                                    xAxes: [{
                                        gridLines: {
                                            display: false,
                                            color: 'rgb(110, 143, 197)'
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Date' //Setting label for xAxes
                                        }
                                    }]
                                }
                            }
                        };
                        var myChart_chart = new Chart(bloodSugarCTX, bloodSugarConfig);

                        //If statement for the point colour
                        for (i = 0; i < myChart_chart.data.datasets[0].data.length; i++) {
                            if (myChart_chart.data.datasets[0].data[i] < 4) {
                                pointBackgroundColors.push("#E62828");
                            } else if (myChart_chart.data.datasets[0].data[i] > 8) {
                                pointBackgroundColors.push("#3535AE");
                            } else {
                                pointBackgroundColors.push("#32B928");
                            }
                        }
                        myChart_chart.update();
                        Chart.defaults.global.defaultFontColor = '#253D5B'; //Setting the font colour of graph
                    });
                })

            .catch(function (err) {
                console.log('Fetch Error :-S', err);
            });

    });
<<<<<<< HEAD
</script>
=======
</script>
>>>>>>> d3d6b1bfc43e107ad6f7daec642ba4d4f7ea7f28
